;==========================================================
;
;   Polybar Config
;   Credits: https://github.com/Barbarossa93,
;   	     https://github.com/skalpasi,
; 	     Tassos Manganaris
;
;==========================================================

[colors]
foreground	= ${xrdb:foreground}
background	= ${xrdb:background}
background-alt	= ${xrdb:color16}
primary		= ${xrdb:color6}
secondary	= ${xrdb:color5}
alert		= ${xrdb:color8}

; Active Shade
shade0		= ${xrdb:color0}
shade1		= ${xrdb:color1}
shade2		= ${xrdb:color2}
shade3		= ${xrdb:color3}
shade4		= ${xrdb:color4}
shade5		= ${xrdb:color5}
shade6		= ${xrdb:color6}
shade7		= ${xrdb:color7}
shade8		= ${xrdb:color8}
shade9		= ${xrdb:color9}
shade10		= ${xrdb:color10}
shade11		= ${xrdb:color11}
shade12		= ${xrdb:color12}
shade13		= ${xrdb:color13}
shade14		= ${xrdb:color14}
shade15		= ${xrdb:color15}
shade16		= ${xrdb:color16}
shade17		= ${xrdb:color17}
shade18		= ${xrdb:color18}

[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top value
; Used for top aligned bars
margin-bottom = 0
; Adjust the _NET_WM_STRUT_PARTIAL bottom value
; Used for bottom aligned bars
margin-top = 0

;; Main Bar

[bar/main]
monitor			= ${env:MONITOR:eDP1}
width 			= 100%
height 			= 34
offset-x 		= 0
offset-y 		= 0
radius 			= 0
fixed-center 		= true
bottom 			= false
override-redirect 	= false

background		= ${colors.background}
foreground		= ${colors.foreground}

line-size		= 3
line-color		= ${colors.background}

border-bottom-size	= 3
border-color		= ${colors.shade0}

padding = 0
module-margin-left = 0
module-margin-right = 0

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details

;; Text Fonts
font-0 = Iosevka Term Medium:style=Medium Extended,Regular:size=10;4
;; Icons Fonts
font-1 = FiraCode Nerd Font Mono:style=Medium:size=19;5
font-2 = FiraCode Nerd Font Mono:style=Medium:size=16;4

modules-left = bspwm
; modules-left = bspwm cava
modules-center = xwindow
modules-right = wireless-network battery pulseaudio date launcher sysmenu
; modules-right = wireless-network wired-network coretemp memory filesystem battery pulseaudio date launcher sysmenu
enable-ipc = true

; The separator will be inserted between the output of each module
separator = " "
; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

wm-name = bspwm
;; locale = en_US.UTF-8

;; Tray

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = right
tray-detached = false
tray-maxsize = 16

tray-background = ${colors.background}
tray-offset-x = 0
tray-offset-y = 0
tray-padding = 0
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
wm-restack = bspwm

; Set a DPI values used when rendering text
; This only affects scalable fonts
; dpi =

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
;enable-ipc = true

; Fallback click handlers that will be called if
; there's no matching module handler found.
click-left =
click-middle =
click-right =
;scroll-up = #bspwm.prev
;scroll-down = #bspwm.next
double-click-left =
double-click-middle =
double-click-right =

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
cursor-click =
cursor-scroll =

;; WM Workspace Specific

; bspwm
;;scroll-up = bspwm-desknext
;;scroll-down = bspwm-deskprev
scroll-up = bspc desktop -f prev.local
scroll-down = bspc desktop -f next.local

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; Time in milliseconds that the input handler will wait between processing events
;throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = false

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
;format-foreground =
;format-background =
;format-underline =
;format-overline =
;format-spacing =
;format-padding =
;format-margin =
;format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = false

;; DONE
[module/bspwm]
type = internal/bspwm

pin-workspaces = true
inline-mode = false

enable-click = true
enable-scroll = true
reverse-scroll = true

fuzzy-match = true

format = <label-state>

label-monitor = %name%
label-focused = %name%
label-occupied = %name%
label-urgent = %name%!

label-focused-foreground = ${colors.background-alt}
label-focused-background = ${colors.shade15}
label-focused-padding = 2

label-occupied-foreground = ${colors.shade15}
label-occupied-background = ${colors.background-alt}
label-occupied-padding = 2

label-urgent-foreground = ${colors.shade15}
label-urgent-background = ${colors.shade9}
label-urgent-padding = 2

label-empty = %name%
label-empty-foreground = ${colors.shade15}
label-empty-padding = 2

label-separator = ""

;; TODO
[module/mpd]
type = internal/mpd

; Host where mpd is running (either ip or domain name)
; Can also be the full path to a unix socket where mpd is running.
;;host = 127.0.0.1
;;port = 6600
;;password = mysecretpassword

; Seconds to sleep between progressbar/song timer sync
; Default: 1
interval = 1

; Available tags:
;   <label-song> (default)
;   <label-time>
;   <bar-progress>
;   <toggle> - gets replaced with <icon-(pause|play)>
;   <toggle-stop> - gets replaced with <icon-(stop|play)>
;   <icon-random>
;   <icon-repeat>
;   <icon-repeatone> (deprecated)
;   <icon-single> - Toggle playing only a single song. Replaces <icon-repeatone>
;   <icon-consume>
;   <icon-prev>
;   <icon-stop>
;   <icon-play>
;   <icon-pause>
;   <icon-next>
;   <icon-seekb>
;   <icon-seekf>
format-online = <label-song> <icon-prev> <toggle> <icon-next>
format-online-prefix = 
format-online-background = ${color.background}
format-online-padding = 1

;format-playing = ${self.format-online}
;format-paused = ${self.format-online}
;format-stopped = ${self.format-online}

; Available tags:
;   <label-offline>
format-offline = <label-offline>
format-offline-prefix = 
format-offline-background = ${color.background}
format-offline-padding = 1

; Available tokens:
;   %artist%
;   %album-artist%
;   %album%
;   %date%
;   %title%
; Default: %artist% - %title%
label-song =  " %artist% - %title%"
label-song-maxlen = 25
label-song-ellipsis = true

; Available tokens:
;   %elapsed%
;   %total%
; Default: %elapsed% / %total%
label-time = %elapsed% / %total%

; Available tokens:
;   None
label-offline = " Offline"

; Only applies if <icon-X> is used
icon-play = 
icon-pause = 
icon-stop = 
icon-next = 
icon-prev = 
icon-seekf =
icon-seekb =
icon-random =
icon-repeat =
icon-repeatone =
icon-single =
icon-consume =

; Used to display the state of random/repeat/repeatone/single
; Only applies if <icon-[random|repeat|repeatone|single]> is used
toggle-on-foreground = ${color.green}
toggle-off-foreground = ${color.red}

; Only applies if <bar-progress> is used
;;bar-progress-width = 45
;;bar-progress-indicator = |
;;bar-progress-fill = ─
;;bar-progress-empty = ─

;; DONE
[module/pipewire]
type = custom/script
tail = true
exec = $HOME/.config/polybar/pipewire.sh
format = <label>
format-font = 5
label = %output%
label-padding = 1

;; DONE
[module/cava]
type = custom/script
tail = true
exec = $HOME/.config/polybar/cava.sh
format = <label>
format-font = 5
label = %output%
label-padding = 1

;; DONE?
[module/xwindow]
type = internal/xwindow
label = %title%
label-maxlen = 120
label-empty = Desktop

format = <label>
format-prefix = "["
format-prefix-foreground = ${colors.shade14}
format-suffix = "]"
format-suffix-foreground = ${colors.shade14}
format-foreground = ${colors.shade14}
;format-background = ${colors.shade16}
;format-overline = ${colors.background}
;format-underline = ${colors.background}

;; TODO?
[module/title]
type = internal/xwindow

; Available tags:
;   <label> (default)
format = <label>
;format-background = ${color.background}
format-padding = 1
;format-prefix = 

; Available tokens:
;   %title%
; Default: %title%
; label = " [%title%] "
label = [i use arch btw]
label-maxlen = 16

; Used instead of label when there is no window title
label-empty = [i use arch btw]

;; weather
[module/weather]
type = custom/script
exec = ~/.config/polybar-forecast/polybar-forecast-linux-x86_64
exec-if = ping openweathermap.org -c 1
interval = 600
label-font = 2
label-padding = 1
click-left = sh ~/.config/polybar/weather.sh

;; TODO
[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
full-at = 99
battery = BAT0
adapter = AC

; If an inotify event haven't been reported in this many seconds, manually poll
; for new values.  Needed as a fallback for systems that don't report events on
; sysfs/procfs.
;
; Disable polling by setting the interval to 0.
poll-interval = 30

; see "man date" for details on how to format the time string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; Default: %H:%M:%S
; time-format = %H:%M

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
format-full = <label-full>
format-full-prefix = " "
format-full-background = ${colors.background}
format-full-padding = 1

; Available tokens:
;   %percentage% (default)
label-full = Full

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = <label-charging>
format-charging-prefix = " "
format-charging-background = ${colors.background}
format-charging-padding = 1

; Available tokens:
;   %percentage% (default)
;   %time%
;   %consumption% (shows current charge rate in watts)
label-charging = %percentage%%

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-discharging>
format-discharging = <ramp-capacity> <label-discharging>
format-discharging-prefix = ""
format-discharging-background = ${colors.background}
format-discharging-padding = 1

; Available tokens:
;   %percentage% (default)
;   %time%
;   %consumption% (shows current discharge rate in watts)
label-discharging = %percentage%%


; Only applies if <ramp-capacity> is used
ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 

; Only applies if <bar-capacity> is used
;bar-capacity-width = 10

; Only applies if <animation-charging> is used
animation-charging-0 =
animation-charging-1 =

; Framerate in milliseconds
animation-charging-framerate = 750

; Only applies if <animation-discharging> is used
;;animation-discharging-0 = ${battery.anim0}
;;animation-discharging-1 = ${battery.anim1}

; Framerate in milliseconds
;animation-discharging-framerate = 500

;; TODO
[module/cpu]
type = internal/cpu

; Seconds to sleep between updates
; Default: 1
interval = 1

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
;;format = <label> <ramp-coreload>
format = <label>
format-prefix = ""
;format-background = ${color.background}
format-padding = 1

; Available tokens:
;   %percentage% (default) - total cpu load averaged over all cores
;   %percentage-sum% - Cumulative load on all cores
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label = " %percentage%%"

; Spacing between individual per-core ramps
;;ramp-coreload-spacing = 1
;;ramp-coreload-0 = ${cpu.load0}
;;ramp-coreload-1 = ${cpu.load1}

;;ramp-load-0 = ${cpu.load0}
;;ramp-load-1 = ${cpu.load1}

[module/alsa]
type = internal/alsa

; Soundcard to be used
; Usually in the format hw:# where # is the card number
; You can find the different card numbers in `/proc/asound/cards`
master-soundcard = default
speaker-soundcard = default
headphone-soundcard = default

; Name of the master, speaker and headphone mixers
; Use the following command to list available mixer controls:
; $ amixer scontrols | sed -nr "s/.*'([[:alnum:]]+)'.*/\1/p"
; If master, speaker or headphone-soundcard isn't the default,
; use `amixer -c # scontrols` instead where # is the number
; of the master, speaker or headphone soundcard respectively
;
; Default: Master
master-mixer = Master

; Optionally define speaker and headphone mixers
; Default: none
;;speaker-mixer = Speaker
; Default: none
;;headphone-mixer = Headphone

; NOTE: This is required if headphone_mixer is defined
; Use the following command to list available device controls
; $ amixer controls | sed -r "/CARD/\!d; s/.*=([0-9]+).*name='([^']+)'.*/printf '%3.0f: %s\n' '\1' '\2'/e" | sort
; You may also need to use `amixer -c # controls` as above for the mixer names
; Default: none
;;headphone-id = 9

; Use volume mapping (similar to amixer -M and alsamixer), where the increase in volume is linear to the ear
; Default: false
;;mapped = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = 5

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume> <label-volume>
;format-volume-background = ${colors.background}
;format-volume-padding = 1

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
format-muted = <label-muted>
format-muted-prefix = 
;format-muted-background = ${color.background}
format-muted-padding = 1

; Available tokens:
;   %percentage% (default)
label-volume = %percentage%%

; Available tokens:
;   %percentage% (default
label-muted = " Muted"
label-muted-foreground = ${color.foreground}

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 

; If defined, it will replace <ramp-volume> when
; headphones are plugged in to `headphone_control_numid`
; If undefined, <ramp-volume> will be used for both
; Only applies if <ramp-volume> is used
; ramp-headphones-0 = 

;; pulseaudio
[module/pulseaudio]
type = internal/pulseaudio
format-muted = <label-muted>
format-muted-prefix = 
format-muted-padding = 1

; Available tokens:
;   %percentage% (default)
label-volume = %percentage%%

; Available tokens:
;   %percentage% (default
label-muted = " Muted"
;label-muted-foreground = #FFF

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 

;; TODO?
[module/date]
type = internal/date

; Seconds to sleep between updates
interval = 5.0

; Optional time format
time = "[%a, %Y-%m-%d %I:%M %p]"

; Available tags:
;   <label> (default)
format = <label>
;format-background = ${color.background}
format-padding = 1

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = %time%

;; TODO
[module/filesystem]
type = internal/fs

; Mountpoints to display
mount-0 = /
;;mount-1 = /home
;;mount-2 = /var

; Seconds to sleep between updates
; Default: 30
interval = 20

; Display fixed precision values
; Default: false
fixed-values = true

; Spacing between entries
; Default: 2
;;spacing = 4

; Available tags:
;   <label-mounted> (default)
;   <bar-free>
;   <bar-used>
;   <ramp-capacity>
format-mounted = <label-mounted>
format-mounted-prefix = 
;format-mounted-background = ${color.background}
format-mounted-padding = 1

; Available tags:
;   <label-unmounted> (default)
format-unmounted = <label-unmounted>
format-unmounted-prefix = 
;format-unmounted-background = ${color.background}
format-unmounted-padding = 1

; Available tokens:
;   %mountpoint%
;   %type%
;   %fsname%
;   %percentage_free%
;   %percentage_used%
;   %total%
;   %free%
;   %used%
; Default: %mountpoint% %percentage_free%%
label-mounted = " %free%"

; Available tokens:
;   %mountpoint%
; Default: %mountpoint% is not mounted
label-unmounted = " %mountpoint%: not mounted"

;; TODO?
[module/memory]
type = internal/memory

; Seconds to sleep between updates
; Default: 1
interval = 1

; Available tags:
;   <label> (default)
;   <bar-used>
;   <bar-free>
;   <ramp-used>
;   <ramp-free>
;   <bar-swap-used>
;   <bar-swap-free>
;   <ramp-swap-used>
;   <ramp-swap-free>
format = <label>
format-prefix = 
;format-background = ${color.background}
format-padding = 1

; Available tokens:
;   %percentage_used% (default)
;   %percentage_free%
;   %gb_used%
;   %gb_free%
;   %gb_total%
;   %mb_used%
;   %mb_free%
;   %mb_total%
;   %percentage_swap_used%
;   %percentage_swap_free%
;   %mb_swap_total%
;   %mb_swap_free%
;   %mb_swap_used%
;   %gb_swap_total%
;   %gb_swap_free%
;   %gb_swap_used%

label = " %gb_used%"

; Only applies if <ramp-used> is used
;;ramp-used-0 = ${memory.used0}
;;ramp-used-1 = ${memory.used1}
;;ramp-used-2 = ${memory.used2}

; Only applies if <ramp-free> is used
;;ramp-free-0 = ${memory.free0}
;;ramp-free-1 = ${memory.free1}
;;ramp-free-2 = ${memory.free2}


[module/temperature]
type = internal/temperature

; Seconds to sleep between updates
; Default: 1
interval = 0.5

; Thermal zone to use
; To list all the zone types, run
; $ for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
; Default: 0
thermal-zone = 0

; Full path of temperature sysfs path
; Use `sensors` to find preferred temperature source, then run
; $ for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
; to find path to desired file
; Default reverts to thermal zone setting
;;hwmon-path = /sys/devices/platform/coretemp.0/hwmon/hwmon2/temp1_input
hwmon-path = /sys/devices/pci0000:00/0000:00:01.3/0000:01:00.0/hwmon/hwmon0/temp1_input

; Threshold temperature to display warning label (in degrees celsius)
; Default: 80
warn-temperature = 65

; Whether or not to show units next to the temperature tokens (°C, °F)
; Default: true
units = true

; Available tags:
;   <label> (default)
;   <ramp>
format = <ramp> <label>
format-padding = 1

; Available tags:
;   <label-warn> (default)
;   <ramp>
format-warn = <ramp> <label-warn>
format-warn-background = ${color.background}
format-warn-padding = 1

; Available tokens:
;   %temperature% (deprecated)
;   %temperature-c%   (default, temperature in °C)
;   %temperature-f%   (temperature in °F)
label = %temperature-c%

; Available tokens:
;   %temperature% (deprecated)
;   %temperature-c%   (default, temperature in °C)
;   %temperature-f%   (temperature in °F)
label-warn = "%temperature-c%"
label-warn-foreground = ${color.red}

; Requires the <ramp> tag
; The icon selection will range from 0 to `warn-temperature`
; with the current temperature as index.
ramp-0 = 
ramp-1 = 
ramp-2 = 
ramp-3 = 
ramp-4 = 

;; TODO
[module/wireless-network]
type = internal/network
; your network interface may be different, change it accordingly
interface = wlp3s0
interval = 1.0

label-connected =  %essid%
label-disconnected =  Disconnected
label-connected-padding = 1
label-disconnected-padding = 1

;; DONE
[module/launcher]
type			= custom/text
content-font		= 3
content			= 
content-background	= ${colors.background-alt}
content-foreground	= ${colors.shade15}
content-padding		= 1
click-left		= ~/.config/rofi/bin/launcher.sh &

;; DONE
[module/sysmenu]
type			= custom/text
content-font		= 3
content			= 
content-background	= ${colors.background-alt}
content-foreground	= ${colors.shade15}
content-padding		= 1
click-left		= ~/.config/rofi/bin/powermenu.sh

[module/coretemp]
type = custom/script

format = <label>
format-background = #141c21
format-foreground = #fff
format-padding = 1

interval = 1

exec = sensors | awk '/^Tdie:/ {print $2}'
label =  %output%